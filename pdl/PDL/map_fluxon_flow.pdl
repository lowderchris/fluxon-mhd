use strict;
use warnings;
use PDL::NiceSlice;
=head2 map_fluxon_flow

=for ref

Given a world and list of fluxons, generates a mapping of the solar wind flow along these fluxon structures.

=cut
use PDL::Options;

sub map_fluxon_flow {
    my $fn = shift;
    my $fluxons = shift;
    my @fluxons = @{$fluxons};

# Generate some blank storage arrays
my @fps = ();   # Fluxon array position
my @phb = ();   # Begining coordinates
my @thb = ();
my @phe = ();   # End coordinates
my @the = ();
my @vrb = ();   # Beginning and end wind velocity
my @vre = ();
my @frb = ();   # Beginning and end expansion factors
my @fre = ();
my @fre2 = ();

#die "I need something to work on!" if $#$fluxons<0;

# Loop through open fluxons and generate wind profiles
#for my $fid(0..$#$fluxons){
for my $fid(0..scalar(@fluxons)-1){

    print 'Calculating fluxon:', $fid, '/', scalar(@fluxons), "\n";

    my $me = $fluxons[$fid];

    # Check for open fieldlines
    my $st_open = ($me->{fc_start}->{label}==-1);
    my $en_open = ($me->{fc_end}->{label}==-2);
    if ($me->{plasmoid} || ($st_open + $en_open != 1)){
       next; 
    }

    # Find the transonic wind solution
    (my $farr, my $fr, my $bth, my $bph) = gen_fluxon_tflow($me);

    # Append any needed values and move along home
    # Note to distinguish between fluxons ends...
    push(@fps, $fid);
    push(@phb, squeeze($bph(0,0)));
    push(@thb, squeeze($bth(0,0)));
    push(@phe, squeeze($bph(0,1)));
    push(@the, squeeze($bth(0,1)));
    push(@vrb, $farr(1,0));
    push(@vre, $farr(1,-1));
    push(@frb, $fr(1,1));
    push(@fre, $fr(-2,1));
    push(@fre2, $fr(-1,1));

    # Output this data to disk
    wcols pdl(@fps), pdl(@phb), pdl(@thb), pdl(@phe), pdl(@the), squeeze(pdl(@vrb)), squeeze(pdl(@vre)), squeeze(pdl(@frb)), squeeze(pdl(@fre)), squeeze(pdl(@fre2)), $fn; 

}

# Output this data to disk
wcols pdl(@fps), pdl(@phb), pdl(@thb), pdl(@phe), pdl(@the), squeeze(pdl(@vrb)), squeeze(pdl(@vre)), squeeze(pdl(@frb)), squeeze(pdl(@fre)), squeeze(pdl(@fre2)), $fn; 

}

__END__
